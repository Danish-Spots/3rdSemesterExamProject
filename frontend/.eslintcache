[{"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\MapView\\MapViewMain.tsx":"1","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Profile\\ProfileMain.tsx":"2","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\classes\\Test.ts":"3","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\AddDeviceListItem.tsx":"4","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Logout\\LogoutMain.tsx":"5","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\EditDeviceModal.tsx":"6","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DevicesMain.tsx":"7","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Login\\LoginMain.tsx":"8","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\stores\\MapMarkerStore.ts":"9","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoBox.tsx":"10","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DeleteDeviceModal.tsx":"11","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\AddDeviceModal.tsx":"12","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DeviceListItem.tsx":"13","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Profile\\ProfileCard.tsx":"14","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\ListView\\TestListItem.tsx":"15","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\ListView\\ListViewMain.tsx":"16","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\classes\\RaspberryPi.ts":"17","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoCard.tsx":"18"},{"size":2386,"mtime":1607504613301,"results":"19","hashOfConfig":"20"},{"size":675,"mtime":1607612062581,"results":"21","hashOfConfig":"20"},{"size":644,"mtime":1607504613315,"results":"22","hashOfConfig":"20"},{"size":2665,"mtime":1607608398829,"results":"23","hashOfConfig":"20"},{"size":756,"mtime":1607504613297,"results":"24","hashOfConfig":"20"},{"size":3450,"mtime":1607684295385,"results":"25","hashOfConfig":"20"},{"size":3067,"mtime":1607613814114,"results":"26","hashOfConfig":"20"},{"size":2318,"mtime":1607504866726,"results":"27","hashOfConfig":"20"},{"size":1296,"mtime":1607504613343,"results":"28","hashOfConfig":"20"},{"size":425,"mtime":1607504613283,"results":"29","hashOfConfig":"20"},{"size":1471,"mtime":1607554251166,"results":"30","hashOfConfig":"20"},{"size":3257,"mtime":1607608464214,"results":"31","hashOfConfig":"20"},{"size":2085,"mtime":1607608258571,"results":"32","hashOfConfig":"20"},{"size":4771,"mtime":1607612105990,"results":"33","hashOfConfig":"20"},{"size":840,"mtime":1607613382370,"results":"34","hashOfConfig":"20"},{"size":2320,"mtime":1607613717447,"results":"35","hashOfConfig":"20"},{"size":625,"mtime":1607504613314,"results":"36","hashOfConfig":"20"},{"size":324,"mtime":1607504613284,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"7wk9q4",{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\MapView\\MapViewMain.tsx",["78"],"import Axios, { AxiosResponse, AxiosError } from \"axios\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport RaspberryPi from \"../../classes/RaspberryPi\";\r\nimport { Map } from \"../Map\";\r\nimport \"../../css/map.scss\";\r\nimport { MapMarkerStoreContext } from \"../../stores/MapMarkerStore\";\r\nimport { UserStoreContext } from \"../../stores/UserStore\";\r\n\r\n// interface Props {\r\n//     MarkerData: {\r\n//       Text: string;\r\n//       Lat: number;\r\n//       Lon: number;\r\n//     }[];\r\n//   }\r\n\r\nexport const MapViewMain: React.FC<{}> = () => {\r\n  const mapMarkerStore = useContext(MapMarkerStoreContext);\r\n  const userStore = useContext(UserStoreContext);\r\n\r\n  useEffect(() => {\r\n    const loadPinData = async (sessionKey: string) => {\r\n      let pis: RaspberryPi[] = [];\r\n      await Axios.get(\"https://fevr.azurewebsites.net/api/RaspberryPis\")\r\n        .then((response: AxiosResponse) => {\r\n          response.data.forEach(\r\n            (o: {\r\n              id: number;\r\n              location: string;\r\n              isActive: boolean;\r\n              profileID: number;\r\n              longitude: number;\r\n              latitude: number;\r\n              isAccountConfirmed: boolean;\r\n            }) => {\r\n              console.log(o.profileID, userStore.profileID as number);\r\n              if (+o.profileID === (userStore.profileID as number)) {\r\n                let newPi: RaspberryPi = new RaspberryPi(\r\n                  o.id,\r\n                  o.location,\r\n                  o.isActive,\r\n                  o.profileID,\r\n                  +o.longitude,\r\n                  +o.latitude,\r\n                  o.isAccountConfirmed\r\n                );\r\n                console.log(\"Correct ProfileID\");\r\n                pis.push(newPi);\r\n              }\r\n            }\r\n          );\r\n        })\r\n        .catch((error: AxiosError) => {\r\n          console.log(error);\r\n        });\r\n      let newMarkerData = pis.map((o) => {\r\n        return {\r\n          ID: o.Id,\r\n          Text: o.Location,\r\n          Lat: +o.Latitude,\r\n          Lon: +o.Longitude,\r\n        };\r\n      });\r\n      mapMarkerStore.change_Markers(newMarkerData);\r\n    };\r\n\r\n    loadPinData(sessionStorage.getItem(\"SessionKey\") as string);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <h1>Map view</h1>\r\n      <div className=\"map-container\">\r\n        <Map />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",["79","80"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Profile\\ProfileMain.tsx",["81","82","83","84"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\classes\\Test.ts",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\AddDeviceListItem.tsx",["85","86"],"import Axios, { AxiosError, AxiosResponse } from \"axios\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport RaspberryPi from \"../../classes/RaspberryPi\"\r\n\r\n\r\ninterface AddDeviceListItemProps {\r\n    device:RaspberryPi \r\n    closeModal: () => void\r\n    loadData: () => void\r\n}\r\n\r\nexport const AddDeviceListItem: React.FC<AddDeviceListItemProps> = (\r\n    {device, closeModal, loadData}) => {\r\n\r\n    const ConfirmDevice = () => {\r\n        Axios.put(`https://fevr.azurewebsites.net/api/RaspberryPis/${device.Id}`, {\r\n                        id: device.Id, \r\n                        location: device.Location, \r\n                        isActive: device.IsActive, \r\n                        profileID: device.ProfileID, \r\n                        longitude: device.Longitude.toString(),\r\n                        latitude: device.Latitude.toString(),\r\n                        isAccountConfirmed: true\r\n                    }\r\n                    )\r\n                    .then((response: AxiosResponse) => {\r\n                        console.log(\"Updated Successfully!\")\r\n                        closeModal()\r\n                        loadData()\r\n                        \r\n                    })\r\n                    .catch((error: AxiosError) => {\r\n                        console.log({\r\n                            id: device.Id, \r\n                            location: device.Location, \r\n                            isActive: device.IsActive, \r\n                            profileID: device.ProfileID, \r\n                            longitude: device.Longitude,\r\n                            latitude: device.Latitude,\r\n                            isAccountConfirmed: true\r\n                        })\r\n                        console.log(error)\r\n                    })\r\n    }\r\n\r\n    return(\r\n        \r\n          <div className=\"deviceListItem\">\r\n                <div className=\"text-container\">\r\n                    <label>#{device.Id}</label>\r\n\r\n                    {/** Commenting Ctr+K+C, uncomment Ctr+U+C */}\r\n                    <label id=\"deviceLocation\">{device.Location}</label>\r\n                    {/* <label>{senName}</label> */}\r\n                   {/* <label>{postCode}</label>*/}\r\n                    {/*<label>{city}</label>*/ }\r\n                    <label>{device.IsAccountConfirmed ? \"Confirmed\" : \"Not Confirmed\"}</label>\r\n                </div>\r\n                \r\n                <div className=\"buttons-container\">\r\n                    <button type=\"button\" onClick={() => ConfirmDevice()}> Confirm Device\r\n                    </button>  \r\n                </div>\r\n            </div>\r\n        \r\n \r\n    )\r\n    \r\n}\r\nexport default AddDeviceListItem\r\n\r\n","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Logout\\LogoutMain.tsx",["87"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\EditDeviceModal.tsx",["88","89","90"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DevicesMain.tsx",["91","92","93","94"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Login\\LoginMain.tsx",[],["95","96"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\stores\\MapMarkerStore.ts",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoBox.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DeleteDeviceModal.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\AddDeviceModal.tsx",["97","98"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DeviceListItem.tsx",["99","100","101"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Profile\\ProfileCard.tsx",["102","103"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\ListView\\TestListItem.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\ListView\\ListViewMain.tsx",["104","105","106"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\classes\\RaspberryPi.ts",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoCard.tsx",[],{"ruleId":"107","severity":1,"message":"108","line":68,"column":6,"nodeType":"109","endLine":68,"endColumn":8,"suggestions":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"119","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":27},{"ruleId":"115","severity":1,"message":"120","line":1,"column":29,"nodeType":"117","messageId":"118","endLine":1,"endColumn":42},{"ruleId":"115","severity":1,"message":"121","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":15},{"ruleId":"115","severity":1,"message":"122","line":2,"column":17,"nodeType":"117","messageId":"118","endLine":2,"endColumn":26},{"ruleId":"115","severity":1,"message":"123","line":2,"column":28,"nodeType":"117","messageId":"118","endLine":2,"endColumn":36},{"ruleId":"107","severity":1,"message":"124","line":18,"column":6,"nodeType":"109","endLine":18,"endColumn":8,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"126","line":2,"column":17,"nodeType":"117","messageId":"118","endLine":2,"endColumn":34},{"ruleId":"115","severity":1,"message":"127","line":2,"column":36,"nodeType":"117","messageId":"118","endLine":2,"endColumn":47},{"ruleId":"115","severity":1,"message":"122","line":2,"column":49,"nodeType":"117","messageId":"118","endLine":2,"endColumn":58},{"ruleId":"128","severity":1,"message":"129","line":13,"column":57,"nodeType":"130","messageId":"131","endLine":13,"endColumn":59},{"ruleId":"115","severity":1,"message":"132","line":19,"column":11,"nodeType":"117","messageId":"118","endLine":19,"endColumn":22},{"ruleId":"107","severity":1,"message":"133","line":69,"column":8,"nodeType":"109","endLine":69,"endColumn":10,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":89,"column":21,"nodeType":"137","endLine":89,"endColumn":25},{"ruleId":"111","replacedBy":"138"},{"ruleId":"113","replacedBy":"139"},{"ruleId":"115","severity":1,"message":"122","line":1,"column":29,"nodeType":"117","messageId":"118","endLine":1,"endColumn":38},{"ruleId":"107","severity":1,"message":"133","line":70,"column":8,"nodeType":"109","endLine":70,"endColumn":10,"suggestions":"140"},{"ruleId":"115","severity":1,"message":"122","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"141","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":16},{"ruleId":"115","severity":1,"message":"142","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":20},{"ruleId":"115","severity":1,"message":"143","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":28},{"ruleId":"107","severity":1,"message":"144","line":53,"column":6,"nodeType":"109","endLine":53,"endColumn":8,"suggestions":"145"},{"ruleId":"115","severity":1,"message":"146","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":18},{"ruleId":"115","severity":1,"message":"147","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":12,"column":59,"nodeType":"130","messageId":"131","endLine":12,"endColumn":61},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'mapMarkerStore' and 'userStore.profileID'. Either include them or remove the dependency array.","ArrayExpression",["148"],"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"@typescript-eslint/no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'AxiosError' is defined but never used.","'AxiosResponse' is defined but never used.","'Profile' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'userStore'. Either include them or remove the dependency array.",["151"],"'MouseEventHandler' is defined but never used.","'ReactPortal' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'triggerText' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'loadPiData'. Either include it or remove the dependency array.",["152"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["149"],["150"],["153"],"'ReactDOM' is defined but never used.","'DeleteDevice' is defined but never used.","'ChangeEvent' is defined but never used.","React Hook React.useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["154"],"'reaction' is defined but never used.","'Moment' is defined but never used.",{"desc":"155","fix":"156"},"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"159","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [mapMarkerStore, userStore.profileID]",{"range":"164","text":"165"},"Update the dependencies array to be: [props.history, userStore]",{"range":"166","text":"167"},"Update the dependencies array to be: [loadPiData]",{"range":"168","text":"169"},{"range":"170","text":"169"},"Update the dependencies array to be: [loadData]",{"range":"171","text":"172"},[2211,2213],"[mapMarkerStore, userStore.profileID]",[621,623],"[props.history, userStore]",[1998,2000],"[loadPiData]",[2127,2129],[1668,1670],"[loadData]"]