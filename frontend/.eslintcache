[{"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\index.tsx":"1","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoBox.tsx":"2","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Map.tsx":"3","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoCard.tsx":"4","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\classes\\RaspberryPi.ts":"5","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DevicesMain.tsx":"6","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DeviceListItem.tsx":"7","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\HomeSecure\\HomeSecureMain.tsx":"8","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\MapView\\MapViewMain.tsx":"9","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\HomeMain.tsx":"10","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\App.tsx":"11","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\WhatIsFevR\\WhatIsFevR.tsx":"12","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\AddDeviceModal.tsx":"13","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\Header.tsx":"14","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Login\\LoginMain.tsx":"15","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Profile\\ProfileMain.tsx":"16","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\classes\\Profile.ts":"17","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Profile\\ProfileCard.tsx":"18"},{"size":494,"mtime":1607022784242,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1606774773890,"results":"21","hashOfConfig":"20"},{"size":1544,"mtime":1607174145993,"results":"22","hashOfConfig":"20"},{"size":324,"mtime":1606774773891,"results":"23","hashOfConfig":"20"},{"size":507,"mtime":1606914621234,"results":"24","hashOfConfig":"20"},{"size":2474,"mtime":1607342133721,"results":"25","hashOfConfig":"20"},{"size":1292,"mtime":1607339458095,"results":"26","hashOfConfig":"20"},{"size":1815,"mtime":1607020138256,"results":"27","hashOfConfig":"20"},{"size":2918,"mtime":1607173764276,"results":"28","hashOfConfig":"20"},{"size":3949,"mtime":1607347434663,"results":"29","hashOfConfig":"20"},{"size":2945,"mtime":1607346043680,"results":"30","hashOfConfig":"20"},{"size":3078,"mtime":1607175736435,"results":"31","hashOfConfig":"20"},{"size":1000,"mtime":1607265055060,"results":"32","hashOfConfig":"20"},{"size":970,"mtime":1607020138254,"results":"33","hashOfConfig":"20"},{"size":1830,"mtime":1607025712670,"results":"34","hashOfConfig":"20"},{"size":1777,"mtime":1607357275804,"results":"35","hashOfConfig":"20"},{"size":683,"mtime":1607351977086,"results":"36","hashOfConfig":"20"},{"size":910,"mtime":1607357622172,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7wk9q4",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\index.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoBox.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Map.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoCard.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\classes\\RaspberryPi.ts",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DevicesMain.tsx",["76","77"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\DeviceListItem.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\HomeSecure\\HomeSecureMain.tsx",["78"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\MapView\\MapViewMain.tsx",["79","80"],"import Axios, { AxiosResponse, AxiosError } from \"axios\";\r\nimport { marker } from \"leaflet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport RaspberryPi from \"../../classes/RaspberryPi\";\r\nimport { Map } from \"../Map\";\r\nimport \"../../css/map.scss\";\r\n\r\n\r\n// interface Props {\r\n//     MarkerData: {\r\n//       Text: string;\r\n//       Lat: number;\r\n//       Lon: number;\r\n//     }[];\r\n//   }\r\n\r\nexport const MapViewMain: React.FC<{}> = ({}) => {\r\n  const [markerData, setMarkerData] = useState<\r\n    { ID: number; Text: string; Lat: number; Lon: number }[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    const loadPinData = async (sessionKey: string) => {\r\n      let userID: number = 0;\r\n      let profileID: number = 0;\r\n      let pis: RaspberryPi[] = [];\r\n      console.log(sessionKey);\r\n      await Axios.get(\r\n        \"https://fevr.azurewebsites.net/api/Sessions/getSessionKey=\" +\r\n          sessionKey\r\n      ).then((response: AxiosResponse) => {\r\n        const data: { id: number; key: string; userID: number } = response.data;\r\n        userID = data.userID;\r\n      });\r\n      await Axios.get(\r\n        \"https://fevr.azurewebsites.net/api/Users/\" + userID\r\n      ).then((response: AxiosResponse) => {\r\n        const data: {\r\n          id: number;\r\n          userName: string;\r\n          password: string;\r\n          email: string;\r\n          profileID: number;\r\n        } = response.data;\r\n        profileID = data.profileID;\r\n      });\r\n      console.log(userID);\r\n      await Axios.get(\"https://fevr.azurewebsites.net/api/RaspberryPis\")\r\n        .then((response: AxiosResponse) => {\r\n          response.data.forEach(\r\n            (o: {\r\n              id: number;\r\n              location: string;\r\n              isActive: boolean;\r\n              profileID: number;\r\n              longitude: number;\r\n              latitude: number;\r\n            }) => {\r\n              if (+o.profileID === profileID) {\r\n                let newPi: RaspberryPi = new RaspberryPi(\r\n                  o.id,\r\n                  o.location,\r\n                  o.isActive,\r\n                  o.profileID,\r\n                  +o.longitude,\r\n                  +o.latitude\r\n                );\r\n                pis.push(newPi);\r\n              }\r\n            }\r\n          );\r\n        })\r\n        .catch((error: AxiosError) => {\r\n          console.log(error);\r\n        });\r\n      let newMarkerData = pis.map((o) => {\r\n        console.log(o);\r\n        return {\r\n          ID: o.Id,\r\n          Text: o.Location,\r\n          Lat: +o.Latitude,\r\n          Lon: +o.Longitude,\r\n        };\r\n      });\r\n      setMarkerData([...newMarkerData]);\r\n    };\r\n\r\n    loadPinData(sessionStorage.getItem(\"SessionKey\") as string);\r\n  }, []);\r\n\r\n  return( \r\n  \r\n        <div className=\"main-container\">\r\n          <h1>Map view</h1>\r\n          <div className=\"map-container\">\r\n          <Map MarkerData={markerData} />\r\n          </div>\r\n        </div>\r\n      )\r\n};\r\n","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\HomeMain.tsx",["81"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\App.tsx",["82","83","84","85","86"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\WhatIsFevR\\WhatIsFevR.tsx",["87"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Devices\\AddDeviceModal.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\Header.tsx",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Login\\LoginMain.tsx",["88","89","90"],"import Axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport React, { FormEvent, useContext, useState } from \"react\";\r\nimport { RouteComponentProps, Router, withRouter } from \"react-router-dom\";\r\nimport { isPropertySignature } from \"typescript\";\r\nimport \"../../css/login.scss\";\r\n\r\ninterface Props extends RouteComponentProps {}\r\n\r\nconst LoginMain: React.FC<Props> = (props) => {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const AttemptLogin = async () => {\r\n    Axios.get(\r\n      `https://fevr.azurewebsites.net/api/Users/login/${username}/${password}`\r\n    )\r\n      .then((response: AxiosResponse) => {\r\n        if (response.status === 200) {\r\n          console.log(\"response data\", response.data);\r\n          sessionStorage.setItem(\"SessionKey\", response.data);\r\n          props.history.push(\"/home_secure\");\r\n        }\r\n      })\r\n      .catch((error: AxiosError) => {\r\n        console.log(\"An error occured while trying to login\", error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (evt: FormEvent) => {\r\n    evt.preventDefault();\r\n    AttemptLogin();\r\n  };\r\n\r\n  return (\r\n    <div id=\"LoginBox\">\r\n      <h2>Sign In</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          id=\"Username\"\r\n          placeholder=\"username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"password\"\r\n          id=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\" id=\"SignIn\">Sign in</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginMain);\r\n","C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Profile\\ProfileMain.tsx",["91","92"],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\classes\\Profile.ts",[],"C:\\Users\\Dominik Haskó\\Documents\\GitHub\\FevR\\3rdSemesterExamProject\\frontend\\src\\Components\\Profile\\ProfileCard.tsx",[],{"ruleId":"93","severity":1,"message":"94","line":12,"column":57,"nodeType":"95","messageId":"96","endLine":12,"endColumn":59},{"ruleId":"97","severity":1,"message":"98","line":16,"column":11,"nodeType":"99","messageId":"100","endLine":16,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":4,"column":46,"nodeType":"95","messageId":"96","endLine":4,"endColumn":48},{"ruleId":"97","severity":1,"message":"101","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":17,"column":43,"nodeType":"95","messageId":"96","endLine":17,"endColumn":45},{"ruleId":"102","severity":1,"message":"103","line":120,"column":6,"nodeType":"104","endLine":120,"endColumn":8,"suggestions":"105"},{"ruleId":"97","severity":1,"message":"106","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":34},{"ruleId":"97","severity":1,"message":"107","line":6,"column":3,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},{"ruleId":"97","severity":1,"message":"108","line":16,"column":10,"nodeType":"99","messageId":"100","endLine":16,"endColumn":22},{"ruleId":"97","severity":1,"message":"109","line":36,"column":9,"nodeType":"99","messageId":"100","endLine":36,"endColumn":26},{"ruleId":"102","severity":1,"message":"110","line":59,"column":6,"nodeType":"104","endLine":59,"endColumn":8,"suggestions":"111"},{"ruleId":"93","severity":1,"message":"94","line":8,"column":55,"nodeType":"95","messageId":"96","endLine":8,"endColumn":57},{"ruleId":"97","severity":1,"message":"112","line":2,"column":28,"nodeType":"99","messageId":"100","endLine":2,"endColumn":38},{"ruleId":"97","severity":1,"message":"113","line":3,"column":31,"nodeType":"99","messageId":"100","endLine":3,"endColumn":37},{"ruleId":"97","severity":1,"message":"114","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":29},{"ruleId":"97","severity":1,"message":"115","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":12,"column":57,"nodeType":"95","messageId":"96","endLine":12,"endColumn":59},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'triggerText' is assigned a value but never used.","Identifier","unusedVar","'marker' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'infoData'. Either include it or remove the dependency array. You can also do a functional update 'setInfoData(i => ...)' if you only need 'infoData' in the 'setInfoData' call.","ArrayExpression",["116"],"'useRef' is defined but never used.","'useLocation' is defined but never used.","'SecureHeader' is defined but never used.","'secureHeaderLinks' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hasSessionKey'. Either include it or remove the dependency array.",["117"],"'useContext' is defined but never used.","'Router' is defined but never used.","'isPropertySignature' is defined but never used.","'JsxEmit' is defined but never used.",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [infoData]",{"range":"122","text":"123"},"Update the dependencies array to be: [hasSessionKey]",{"range":"124","text":"125"},[3746,3748],"[infoData]",[1561,1563],"[hasSessionKey]"]