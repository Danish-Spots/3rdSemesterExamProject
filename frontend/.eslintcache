[{"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\App.tsx":"1","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\index.tsx":"2","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoBox.tsx":"3","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoCard.tsx":"4","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\reportWebVitals.ts":"5","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\HomeMain.tsx":"6","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\Header.tsx":"7","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Map.tsx":"8","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\classes\\RaspberryPi.ts":"9","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Login\\LoginMain.tsx":"10","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\ProtectedRoute.tsx":"11","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\HomeSecure\\HomeSecureMain.tsx":"12","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\HomeSecure\\SecureHeader.tsx":"13"},{"size":2974,"mtime":1607012911597,"results":"14","hashOfConfig":"15"},{"size":517,"mtime":1606841719213,"results":"16","hashOfConfig":"15"},{"size":421,"mtime":1606756697802,"results":"17","hashOfConfig":"15"},{"size":324,"mtime":1606841719208,"results":"18","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"15"},{"size":3927,"mtime":1606929133754,"results":"20","hashOfConfig":"15"},{"size":970,"mtime":1606928143721,"results":"21","hashOfConfig":"15"},{"size":1026,"mtime":1606929435759,"results":"22","hashOfConfig":"15"},{"size":507,"mtime":1606840535920,"results":"23","hashOfConfig":"15"},{"size":1763,"mtime":1606931480018,"results":"24","hashOfConfig":"15"},{"size":457,"mtime":1606929728207,"results":"25","hashOfConfig":"15"},{"size":1815,"mtime":1607012356803,"results":"26","hashOfConfig":"15"},{"size":1003,"mtime":1607013079967,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"92iifd",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\App.tsx",[],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\index.tsx",[],["57","58"],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoBox.tsx",[],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\InfoCard.tsx",[],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\reportWebVitals.ts",[],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\HomeMain.tsx",["59"],"import React, { useEffect, useState } from \"react\";\r\nimport { Map } from \"../Map\";\r\nimport { InfoBox } from \"./InfoBox\";\r\nimport \"../../css/home.scss\";\r\nimport Axios, { AxiosResponse, AxiosError } from \"axios\";\r\nimport RaspberryPi from \"../../classes/RaspberryPi\";\r\n\r\nexport const HomeMain: React.FC<{}> = () => {\r\n  const [infoData, setInfoData] = useState<\r\n    { Name: string; Title: string; Value: string }[]\r\n  >([\r\n    { Name: \"testcount\", Title: \"Total number of tests\", Value: \"0\" },\r\n    { Name: \"fevercount\", Title: \"Fever detected\", Value: \"0\" },\r\n    { Name: \"nofevercount\", Title: \"Negative tests\", Value: \"0\" },\r\n    { Name: \"testcounttoday\", Title: \"Tests today\", Value: \"0\" },\r\n    {\r\n      Name: \"fevercounttoday\",\r\n      Title: \"Fever detected today\",\r\n      Value: \"No data\",\r\n    },\r\n    {\r\n      Name: \"highesttemptoday\",\r\n      Title: \"Highest temperature today\",\r\n      Value: \"No data\",\r\n    },\r\n    { Name: \"highesttemp\", Title: \"Highest temperature\", Value: \"No data\" },\r\n    {\r\n      Name: \"mostfeverslocation\",\r\n      Title: \"Most fevers at\",\r\n      Value: \"No location\",\r\n    },\r\n  ]);\r\n\r\n  const [markerData, setMarkerData] = useState<\r\n    { Text: string; Lat: number; Lon: number }[]\r\n  >([\r\n    {\r\n      Text: \"Loading Data\",\r\n      Lat: 0,\r\n      Lon: 0,\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const loadCardData = async () => {\r\n      let testCount: string = \"0\";\r\n      let feverCount: string = \"0\";\r\n      let noFeverCount: string = \"0\";\r\n      await Axios.get(\"https://fevr.azurewebsites.net/TestCount\")\r\n        .then((response: AxiosResponse) => {\r\n          testCount = response.data;\r\n        })\r\n        .catch((error: AxiosError) => {\r\n          console.log(error);\r\n        });\r\n      await Axios.get(\"https://fevr.azurewebsites.net/FeverCount\")\r\n        .then((response: AxiosResponse) => {\r\n          feverCount = response.data;\r\n        })\r\n        .catch((error: AxiosError) => {\r\n          console.log(error);\r\n        });\r\n      await Axios.get(\"https://fevr.azurewebsites.net/NoFeverCount\")\r\n        .then((response: AxiosResponse) => {\r\n          noFeverCount = response.data;\r\n        })\r\n        .catch((error: AxiosError) => {\r\n          console.log(error);\r\n        });\r\n      setInfoData(\r\n        infoData.map((o) => {\r\n          switch (o.Name) {\r\n            case \"testcount\":\r\n              return { ...o, Value: testCount };\r\n            case \"fevercount\":\r\n              return { ...o, Value: feverCount };\r\n            case \"nofevercount\":\r\n              return { ...o, Value: noFeverCount };\r\n          }\r\n          return o;\r\n        })\r\n      );\r\n    };\r\n\r\n    const loadPinData = async () => {\r\n      let pis: RaspberryPi[] = [];\r\n      await Axios.get(\"https://fevr.azurewebsites.net/api/RaspberryPis\")\r\n        .then((response: AxiosResponse) => {\r\n          response.data.forEach(\r\n            (o: {\r\n              id: number;\r\n              location: string;\r\n              isActive: boolean;\r\n              profileID: number;\r\n              longitude: number;\r\n              latitude: number;\r\n            }) => {\r\n              let newPi: RaspberryPi = new RaspberryPi(\r\n                o.id,\r\n                o.location,\r\n                o.isActive,\r\n                o.profileID,\r\n                +o.longitude,\r\n                +o.latitude\r\n              );\r\n              pis.push(newPi);\r\n            }\r\n          );\r\n        })\r\n        .catch((error: AxiosError) => {\r\n          console.log(error);\r\n        });\r\n      let newMarkerData = pis.map((o) => {\r\n        console.log(o);\r\n        return { Text: o.Location, Lat: +o.Latitude, Lon: +o.Longitude };\r\n      });\r\n      setMarkerData([...newMarkerData]);\r\n    };\r\n    loadCardData();\r\n    loadPinData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <h1>Home</h1>\r\n      <InfoBox InfoData={infoData} />\r\n      <Map MarkerData={markerData} />\r\n    </div>\r\n  );\r\n};\r\n","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Home\\Header.tsx",[],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Map.tsx",[],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\classes\\RaspberryPi.ts",[],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\Login\\LoginMain.tsx",["60","61","62"],"import Axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport React, { FormEvent, useContext, useState } from \"react\";\r\nimport { RouteComponentProps, Router, withRouter } from \"react-router-dom\";\r\nimport { isPropertySignature } from \"typescript\";\r\nimport \"../../css/login.scss\";\r\n\r\ninterface Props extends RouteComponentProps {}\r\n\r\nconst LoginMain: React.FC<Props> = (props) => {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const AttemptLogin = async () => {\r\n    Axios.get(\r\n      `https://fevr.azurewebsites.net/api/Users/login/${username}/${password}`\r\n    )\r\n      .then((response: AxiosResponse) => {\r\n        if (response.status === 200) {\r\n          console.log(\"response data\", response.data);\r\n          sessionStorage.setItem(\"SessionKey\", response.data);\r\n          props.history.push(\"/home_secure\");\r\n        }\r\n      })\r\n      .catch((error: AxiosError) => {\r\n        console.log(\"An error occured while trying to login\", error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (evt: FormEvent) => {\r\n    evt.preventDefault();\r\n    AttemptLogin();\r\n  };\r\n\r\n  return (\r\n    <div id=\"LoginBox\">\r\n      <h2>Sign In</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          id=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          id=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <input type=\"submit\" id=\"SignIn\" value=\"Sign In\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginMain);\r\n","D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\ProtectedRoute.tsx",[],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\HomeSecure\\HomeSecureMain.tsx",["63"],"D:\\Zealand\\Programming\\3rdSemesterExamProject\\frontend\\src\\Components\\HomeSecure\\SecureHeader.tsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":121,"column":6,"nodeType":"70","endLine":121,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":28,"nodeType":"74","messageId":"75","endLine":2,"endColumn":38},{"ruleId":"72","severity":1,"message":"76","line":3,"column":31,"nodeType":"74","messageId":"75","endLine":3,"endColumn":37},{"ruleId":"72","severity":1,"message":"77","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":4,"column":46,"nodeType":"80","messageId":"81","endLine":4,"endColumn":48},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'infoData'. Either include it or remove the dependency array. You can also do a functional update 'setInfoData(i => ...)' if you only need 'infoData' in the 'setInfoData' call.","ArrayExpression",["84"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'isPropertySignature' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [infoData]",{"range":"87","text":"88"},[3748,3750],"[infoData]"]